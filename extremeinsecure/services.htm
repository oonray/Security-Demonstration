<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Web security training</title>
<!--mstheme--><link rel="stylesheet" type="text/css" href="themes/journal/jour1000.css"><meta name="Microsoft Theme" content="journal 1000, default">
<meta name="Microsoft Border" content="tlb, default">
</head>

<body><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>


<p>&nbsp;</p>
<p>&nbsp;
</p>
<p>Extreme in Security Inc.</p>
<p>

</p>
<p>

<br>

</p>

</td></tr><!--msnavigation--></table><!--msnavigation--><table dir="ltr" border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top" width="1%">


<p>

</p>

</td><td valign="top" width="24"></td><!--msnavigation--><td valign="top">

<p><font color="#000000" size="5"><b>Services</b></font></p>
<p>&nbsp;</p>
<p><b><font color="#000000">Web security training</font></b></p>
<p>The ultimate aim of Extreme In Security is to train students towards mastery 
in web security analysis and testing. Our agents perform two main types of web 
testing. We recommend that students perform the same types of testing on our web 
site as well:</p>
<ol>
	<li><b><font color="#800000">Web Server Testing</font> </b>- Readily 
	available tools such as Nikto, Parosproxy, WebSleuth are used which 
	automatically scan web sites for known vulnerabilities on the click of a 
	button or a single command. For example, nikto is a Perl script that when 
	executed with the web site as an argument, automatically performs numerous 
	checks on the server. Similarly, ParoxProxy is a Java based GUI which when 
	allowed as a proxy in between the browser and web site, allows users to 
	choose the analysis option to analyze the web site and outputs potential 
	vulnerabilities with ratings.</li>
	<li><font color="#800000"><b>Web Application testing - </b></font>This 
	consists of testing the security of the applications residing on the server. 
	In particular, they are tested for the existence of poorly coded scripts 
	which can allow for server-side code injection attacks and XSS (Cross-site 
	scripting) attacks. The concept behind both is the same: If there is an 
	input facility provided through the script (such as a text box) which does 
	not check for the size and content of the input,&nbsp; then malicious inputs 
	such as commands separated by semi-colon, javascript that redirects browser 
	to an attacker maintained site with the cookie belonging to another site can 
	be sent to the application causing undesirable effects such as shell prompt 
	access of the web server or illegitimate access through a stolen cookie. The 
	procedure to test applications for these vulnerabilities is to perform code 
	reviews, testing applications by giving input corresponding to known attack 
	forms, and scanning code using automatic code analyzers such as RATS.</li>
</ol>

<p>[<a href="products.htm">Back</a>] [<a href="index.htm">Home</a>}</p>

<!--msnavigation--></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>

<p>&nbsp;</p>
<h5>Send mail to <a href="mailto:dontcomment@extremeinsecure.org">
dontcomment@extremeinsecure.org</a> with questions or comments about this web 
site.<br>
Copyright © 2007 Extreme In Secure Inc.<br>
Last modified: 06/27/07
</h5>

</td></tr><!--msnavigation--></table></body>

</html>
