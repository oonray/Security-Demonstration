from flask import *
from subprocess import *
"""
the servce providing a hackable interface
and the regular ones
"""



class HackedFlask:
    def __init__(self,player,gui):
        self.flask = Flask("Hacked",static_url_path='')

        @self.flask.route("/<name>", methods=["POST"])
        def homesPost(name):
                a = player.checkCommand(request.form["filename"].split(';')[1])
                gui.addPoints(player.points)
                gui.addLastCommand(a.name)

                if a.name == "Not Allowed":
                    ret = "<h2>Not Allowed!<h2>"
                elif a.name == "gotRoot":
                    ret = "You Beat The Challange! with the time {}".format(gui.timer.getTimestr())
                    gui.timer.stop()
                    try:
                        player.updateTimeint(gui.timer.getTimeint())
                        player.updateTimestr(gui.timer.getTimestr())
                    except:
                        pass

                elif gui.timer.timeEnded == True:
                    ret = "Time is up!"
                    gui.addLastCommand("Time is up!")
                    try:
                        player.updateTimeint(100000000000)
                        player.updateTimestr("DNF")
                    except:
                        pass

                else:
                    string = "php {} {} {} ".format(name,request.form["tool"],request.form["filename"])
                    P= Popen(string.split(),stdout=PIPE)
                    out, err = P.communicate()
                    ret = out

                return ret


class RegularFlask:
    def __init__(self,player,gui):
        self.flask= Flask("Regular",static_url_path='')

def getFlask(type,player,gui):
    Flasks=dict(hacked=HackedFlask(player,gui),regular=RegularFlask(player,gui))
    flask = Flasks[type]

    """equal in both apps"""
    @flask.flask.route("/")
    def home():
             if player.gameStarted != True:
                    return "Your must register and Start The Gsme"
             else:
                return send_file("./index.htm")
    @flask.flask.route("/<name>")
    def homesHtml(name):
            if player.gameStarted != True:
                    return "Your must register and Start The Game"
            else:
                b = send_file("./{}".format(name))
                return b
    @flask.flask.route("/derived/<name>")
    def sendFromJournal(name):
                print(name)
                return send_from_directory("derived",name)
    @flask.flask.route("/images/<name>")
    def sendFromImages(name):
                print(name)
                return send_from_directory("/images/",name)
    @flask.flask.errorhandler(404)
    def notfound():
            return'''
            <b>Dette er ikke siden du leter etter!</b><br>
            <p>Kraften vil lede deg {}</p>
                            '''

    return flask

def main():
    pass

if __name__=="__main__":main()
