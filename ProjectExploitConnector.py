import socket
from threading import *
from argparse import *
"""
Creates a siced and or a listener based on input
This is based on the Factory Model

"""

class Socket(socket.socket):
    """Base Socket"""
    def __init__(self):
        socket.socket.__init__(self,socket.AF_INET,socket.SOCK_STREAM)

class Listener(Socket):
    """listener socket"""
    def bindLocalIface(self,iface,port):
        self.bind((iface.adress,port))
        self.listen(5)

    def Accept(self):
        (clientsoc,address) = self.accept()
        c = Thread(self.Get(clientsoc))
        c.run()

    def Get(self,socket):
        self.socket.send("Its Here!")
        a = socket.recv()

class SenderUser(Socket):
    """sender socet"""
    def sendConfirm(self):
        self.send("LoggedInAsUser")


def GetSocket(name):
    """allows the user to get a listener or sender based on what string they input"""
    sockets=dict(Listen=Listener(),Sender=SenderUser())
    return sockets[name]



def main():
    """For Testing"""
    pass



if __name__ == "__main__":main()